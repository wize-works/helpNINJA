# Default values for helpNINJA application
# 
# üöÄ DEPLOYMENT SETUP INSTRUCTIONS:
# 
# 1. REQUIRED CHANGES (you must update these):
#    - Update all domain names in the ingress section below
#    - Verify your nginx ingress controller class name
#    - Verify your cert-manager cluster issuer names
#
# 2. OPTIONAL CHANGES (adjust based on your needs):
#    - Resource limits (memory/CPU requests and limits)
#    - Replica counts for production and staging
#    - Autoscaling thresholds and limits
#    - Ingress timeout values
#
# 3. SECRETS (configured via GitHub Actions, not here):
#    - All sensitive values are set via GitHub Secrets
#    - No need to modify the secrets section below
#
# 4. AFTER DEPLOYMENT:
#    - Monitor resource usage: kubectl top pods -n helpninja
#    - Check logs: kubectl logs -n helpninja deployment/helpninja
#    - Verify SSL: kubectl get certificates -n helpninja
#
# ==============================================================================

# Basic deployment configuration
replicaCount: 2  # Default production replica count

image:
  repository: ""  # Set via GitHub Actions workflow (--set image.repository)
  tag: "latest"
  pullPolicy: IfNotPresent

staging:
  enabled: false  # Set to true to deploy staging resources
  replicaCount: 1

# Supabase configuration
# TODO: Replace with your actual Supabase project URLs
supabase:
  url: "https://adrokmnrceksbpwjusjj.supabase.co"
  stagingUrl: "https://adrokmnrceksbpwjusjj.supabase.co"

# Secrets - these will be populated from GitHub Secrets
# Note: These values are set via --set flags in the GitHub Actions workflow
# You don't need to modify these in this file
secrets:
  # OpenAI Configuration
  openaiApiKey: ""                    # Set via OPENAI_API_KEY secret
  openaiChatModel: "gpt-4o-mini"     # Set via OPENAI_CHAT_MODEL secret
  openaiEmbedModel: "text-embedding-3-small"  # Set via OPENAI_EMBED_MODEL secret
  
  # Database Configuration
  databaseUrl: ""                     # Set via DATABASE_URL secret (production)
  stagingDatabaseUrl: ""              # Set via STAGING_DATABASE_URL secret
  
  # Stripe Configuration
  stripeSecretKey: ""                 # Set via STRIPE_SECRET_KEY secret
  stripeWebhookSecret: ""             # Set via STRIPE_WEBHOOK_SECRET secret
  stripePriceStarter: ""              # Set via STRIPE_PRICE_STARTER secret
  stripePricePro: ""                  # Set via STRIPE_PRICE_PRO secret
  stripePriceAgency: ""               # Set via STRIPE_PRICE_AGENCY secret
  
  # Supabase Configuration
  supabaseServiceRoleKey: ""          # Set via SUPABASE_SERVICE_ROLE_KEY secret
  
  # Integration Secrets
  slackWebhookUrl: ""                 # Set via SLACK_WEBHOOK_URL secret
  resendApiKey: ""                    # Set via RESEND_API_KEY secret

# Resource limits
# Monitor with: kubectl top pods -n helpninja
resources:
  requests:
    memory: "128Mi"    # Minimum memory request per pod
    cpu: "100m"        # Minimum CPU request per pod (0.1 cores)
  limits:
    memory: "512Mi"    # Maximum memory limit per pod
    cpu: "500m"        # Maximum CPU limit per pod (0.5 cores)

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"  # Must match your nginx ingress controller class
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Must match your cert-manager issuer
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"  # Adjust if you need larger file uploads
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"  # Adjust based on your API response times
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"  # Adjust based on your API response times
  
  # Production domain configuration
  hosts:
    - host: helpninja.app
      paths:
        - path: /
          pathType: Prefix
  
  # Staging domain configuration  
  staging:
    - host: staging.helpninja.app
      paths:
        - path: /
          pathType: Prefix
  
  # TLS certificate configuration
  tls:
    - secretName: helpninja-tls
      hosts:
        - helpninja.app
    - secretName: helpninja-staging-tls
      hosts:
        - staging.helpninja.app

# Autoscaling configuration
# TODO: Adjust these values based on your traffic patterns and resource requirements
autoscaling:
  enabled: true
  
  # Production autoscaling
  minReplicas: 2        # Minimum pods to keep running
  maxReplicas: 10       # Maximum pods to scale up to
  targetCPUUtilizationPercentage: 70    # Scale up when CPU reaches 70%
  targetMemoryUtilizationPercentage: 80 # Scale up when memory reaches 80%
  
  # Staging autoscaling (more conservative)
  staging:
    minReplicas: 1      # Minimum pods for staging
    maxReplicas: 3      # Maximum pods for staging

# ==============================================================================
# VALIDATION & TROUBLESHOOTING
# ==============================================================================
#
# üîç COMMON ISSUES & SOLUTIONS:
#
# 1. INGRESS NOT WORKING:
#    - Verify nginx ingress controller is running: kubectl get pods -n ingress-nginx
#    - Check ingress status: kubectl get ingress -n helpninja
#    - Verify domain DNS points to your AKS cluster's external IP
#
# 2. SSL CERTIFICATES NOT ISSUED:
#    - Check cert-manager status: kubectl get pods -n cert-manager
#    - Verify cluster issuer: kubectl get clusterissuer
#    - Check certificate events: kubectl describe certificate -n helpninja helpninja-tls
#
# 3. PODS NOT STARTING:
#    - Check pod status: kubectl get pods -n helpninja
#    - View pod logs: kubectl logs -n helpninja deployment/helpninja
#    - Check events: kubectl get events -n helpninja --sort-by='.lastTimestamp'
#
# 4. RESOURCE ISSUES:
#    - Monitor resource usage: kubectl top pods -n helpninja
#    - Check HPA status: kubectl get hpa -n helpninja
#    - Adjust resource limits above if pods are being killed
#
# 5. DATABASE CONNECTION ISSUES:
#    - Verify database URL in secrets: kubectl get secret helpninja-secrets -n helpninja -o yaml
#    - Test connectivity from cluster: kubectl run test-db -n helpninja --rm -it --image=postgres:15 -- psql <connection-string>
#
# üìû NEED HELP?
# - Check the full deployment guide: docs/deployment/azure-kubernetes-deployment.md
# - Review GitHub Actions logs for deployment errors
# - Contact the development team
